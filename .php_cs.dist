<?php declare(strict_types=1);

return (new PhpCsFixer\Config())
    ->setUsingCache(false)
    ->setRiskyAllowed(true)
    ->setRules([
        '@PHP70Migration'              => true,
        '@PHP70Migration:risky'        => true,
        '@PHP71Migration'              => enableRule('7.1'),
        '@PHP71Migration:risky'        => enableRule('7.1'),
        '@PHP73Migration'              => enableRule('7.3'),
        '@PHP74Migration'              => enableRule('7.4'),
        '@PHP80Migration'              => enableRule('8.0'),
        '@PhpCsFixer'                  => true,
        '@PhpCsFixer:risky'            => true,
        '@Symfony'                     => true,
        '@Symfony:risky'               => true,
        'binary_operator_spaces'       => ['default' => 'align_single_space'],
        'blank_line_after_opening_tag' => false,
        'linebreak_after_opening_tag'  => false,
        'declare_strict_types'         => true,
        'native_function_invocation'   => true,
        'phpdoc_to_comment'            => true,
        'single_line_comment_style'    => true,
        'ordered_class_elements'       => [
            'sortAlgorithm' => 'alpha',
            'order'         => [
                'use_trait',

                'constant',
                'constant_public',
                'constant_protected',
                'constant_private',

                'property_static',
                'property_public_static',
                'property_protected_static',
                'property_private_static',

                'property',
                'property_public',
                'property_protected',
                'property_private',

                'construct',
                'destruct',

                'method_static',
                'method_public_static',
                'method_protected_static',
                'method_private_static',

                'public',
                'protected',
                'private',

                'method',
                'method_public',
                'method_protected',
                'method_private',
                'magic',
                'phpunit',
            ],
        ],
    ])
;

/**
 * Check whether to enable migrations acording to the
 * given `$version`.
 */
function enableRule(string $version): bool
{
    return -1 !== \version_compare(\PHP_VERSION, $version);
}
